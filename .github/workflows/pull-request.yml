#
# This workflow is run for pull requests the modify the `packages` directory.
# It works in two stages: first it determines the list of added, modified or
# removed packages; for each added or modified package, it executes the
# `validate_package.py` script to check for issues with the metadata or
# tarball. Provided these initial tests pass, the second stage consists of
# invoking a separate workflow which runs tests for all packages in the
# package distribution as they would appear when the PR under review would be
# merged. This is used to determine whether any package tests change from PASS
# to FAIl or vice versa.
#
name: "PR"

on:
  workflow_dispatch:  # manual trigger for debugging
  pull_request:
    paths:
      - 'packages/*/meta.json'

concurrency:
  # group by workflow and ref
  group: ${{ github.workflow }}-${{ github.ref }}
  # Cancel intermediate builds, but only if it is a pull request build.
  cancel-in-progress: true

jobs:
  detect-changes:
    name: "Detect affected packages"
    runs-on: ubuntu-latest
    outputs:
      modified: ${{ steps.modified.outputs.modified }}
    steps:
      # clone with depth 0, so that we can determine what was changed
      # TODO: isn't depth 1 sufficient?
      - uses: actions/checkout@v2
        with:
          fetch-depth: 0

      - name: "Install package distribution tools"
        run: python -m pip install -r tools/requirements.txt

      # Setup ccache, to speed up repeated compilation of the same binaries
      # (i.e., GAP and the packages)
      - name: "Setup ccache"
        uses: Chocobo1/setup-ccache-action@v1
        with:
          update_packager_index: false

      - name: "Install GAP"
        uses: gap-actions/setup-gap@4e865453a9185dfd6d47cdd97e5ce011bee37e9a
        with:
          GAP_BOOTSTRAP: 'minimal'
          GAP_PKGS_TO_CLONE: 'json'
          GAP_PKGS_TO_BUILD: 'json'

      - name: "Determine what was added or modified"
        id: modified
        run: |
            modified=$(git diff --name-only --no-renames --diff-filter=AM ${{ github.event.pull_request.base.sha }} -- packages/*/meta.json)
            echo "Add or updated packages: ${modified}"
            if [[ -n "${modified}" ]]; then
              echo "::set-output name=modified::true"
            else
              echo "::set-output name=modified::false"
            fi

      - name: "Obtain copy of old metadata, if any"
        run: |
            for PKG in ${modified}; do
              git cat-file blob ${{ github.event.pull_request.base.sha }}:$PKG > $PKG.old || :
            done

      - name: "Validate metadata"
        run: tools/validate_package.py ${modified}

  test-all-master:
    name: "master"
    needs: detect-changes
    if: ${{ needs.detect-changes.outputs.modified == 'true' }}
    uses: ./.github/workflows/test-all.yml
    with:
      which-gap: 'master'

  test-all-4.11.1:
    name: "4.11.1"
    needs: detect-changes
    if: ${{ needs.detect-changes.outputs.modified == 'true' }}
    uses: ./.github/workflows/test-all.yml
    with:
      which-gap: '4.11.1'
